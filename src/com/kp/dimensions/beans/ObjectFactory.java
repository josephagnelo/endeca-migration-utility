//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.07 at 01:10:40 PM CDT 
//


package com.kp.dimensions.beans;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.kp.dimensions.beans package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _PROFILE_QNAME = new QName("", "PROFILE");
    private final static QName _PVAL_QNAME = new QName("", "PVAL");
    private final static QName _LBOUND_QNAME = new QName("", "LBOUND");
    private final static QName _DIMNAME_QNAME = new QName("", "DIMNAME");
    private final static QName _PROPNAME_QNAME = new QName("", "PROPNAME");
    private final static QName _PHRASE_QNAME = new QName("", "PHRASE");
    private final static QName _UBOUND_QNAME = new QName("", "UBOUND");
    private final static QName _NUMDVALS_QNAME = new QName("", "NUM_DVALS");
    private final static QName _COMMENT_QNAME = new QName("", "COMMENT");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.kp.dimensions.beans
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link PROP }
     * 
     */
    public PROP createPROP() {
        return new PROP();
    }

    /**
     * Create an instance of {@link CONFIG }
     * 
     */
    public CONFIG createCONFIG() {
        return new CONFIG();
    }

    /**
     * Create an instance of {@link DIMENSIONS }
     * 
     */
    public DIMENSIONS createDIMENSIONS() {
        return new DIMENSIONS();
    }

    /**
     * Create an instance of {@link DIMENSION }
     * 
     */
    public DIMENSION createDIMENSION() {
        return new DIMENSION();
    }

    /**
     * Create an instance of {@link DIMENSIONID }
     * 
     */
    public DIMENSIONID createDIMENSIONID() {
        return new DIMENSIONID();
    }

    /**
     * Create an instance of {@link DIMENSIONNODE }
     * 
     */
    public DIMENSIONNODE createDIMENSIONNODE() {
        return new DIMENSIONNODE();
    }

    /**
     * Create an instance of {@link DVAL }
     * 
     */
    public DVAL createDVAL() {
        return new DVAL();
    }

    /**
     * Create an instance of {@link DVALID }
     * 
     */
    public DVALID createDVALID() {
        return new DVALID();
    }

    /**
     * Create an instance of {@link SYN }
     * 
     */
    public SYN createSYN() {
        return new SYN();
    }

    /**
     * Create an instance of {@link BOUNDC }
     * 
     */
    public BOUNDC createBOUNDC() {
        return new BOUNDC();
    }

    /**
     * Create an instance of {@link RECORDID }
     * 
     */
    public RECORDID createRECORDID() {
        return new RECORDID();
    }

    /**
     * Create an instance of {@link BOUND }
     * 
     */
    public BOUND createBOUND() {
        return new BOUND();
    }

    /**
     * Create an instance of {@link KEYDIMENSION }
     * 
     */
    public KEYDIMENSION createKEYDIMENSION() {
        return new KEYDIMENSION();
    }

    /**
     * Create an instance of {@link RECORDGROUP }
     * 
     */
    public RECORDGROUP createRECORDGROUP() {
        return new RECORDGROUP();
    }

    /**
     * Create an instance of {@link LOG }
     * 
     */
    public LOG createLOG() {
        return new LOG();
    }

    /**
     * Create an instance of {@link RECORDINDEX }
     * 
     */
    public RECORDINDEX createRECORDINDEX() {
        return new RECORDINDEX();
    }

    /**
     * Create an instance of {@link DVALPATH }
     * 
     */
    public DVALPATH createDVALPATH() {
        return new DVALPATH();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PROFILE")
    public JAXBElement<String> createPROFILE(String value) {
        return new JAXBElement<String>(_PROFILE_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PVAL")
    public JAXBElement<String> createPVAL(String value) {
        return new JAXBElement<String>(_PVAL_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BOUNDC }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LBOUND")
    public JAXBElement<BOUNDC> createLBOUND(BOUNDC value) {
        return new JAXBElement<BOUNDC>(_LBOUND_QNAME, BOUNDC.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "DIMNAME")
    public JAXBElement<String> createDIMNAME(String value) {
        return new JAXBElement<String>(_DIMNAME_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PROPNAME")
    public JAXBElement<String> createPROPNAME(String value) {
        return new JAXBElement<String>(_PROPNAME_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PHRASE")
    public JAXBElement<String> createPHRASE(String value) {
        return new JAXBElement<String>(_PHRASE_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BOUNDC }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "UBOUND")
    public JAXBElement<BOUNDC> createUBOUND(BOUNDC value) {
        return new JAXBElement<BOUNDC>(_UBOUND_QNAME, BOUNDC.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "NUM_DVALS")
    public JAXBElement<String> createNUMDVALS(String value) {
        return new JAXBElement<String>(_NUMDVALS_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "COMMENT")
    public JAXBElement<String> createCOMMENT(String value) {
        return new JAXBElement<String>(_COMMENT_QNAME, String.class, null, value);
    }

}
